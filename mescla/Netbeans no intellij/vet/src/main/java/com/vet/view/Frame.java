package com.vet.view;

import com.vet.view.table.impl.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;

/**
 * Vet's project Main frame
 * @author Nicolas Canova
 */
public class Frame extends JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new JTabbedPane();
        clientePanel = new JPanel();
        clienteTabbedPane = new JTabbedPane();
        cadastrarClientePanel = new JPanel();
        nomeClienteLabel = new JLabel();
        nomeClienteTextField = new JTextField();
        cepClienteLabel = new JLabel();
        cepClienteTextField = new JTextField();
        enderecoClienteLabel = new JLabel();
        enderecoClienteTextField = new JTextField();
        telefoneClienteLabel = new JLabel();
        telefoneClienteTextField = new JTextField();
        emailClienteTextField = new JTextField();
        emailClienteLabel = new JLabel();
        cadastrarClienteButton = new JButton();
        atualizarClientePanel = new JPanel();
        atualizarClienteLabel = new JLabel();
        atualizarClienteComboBox = new JComboBox<>();
        atualizarNomeClienteLabel = new JLabel();
        atualizarNomeClienteTextField = new JTextField();
        atualizarCepClienteLabel = new JLabel();
        atualizarCepClienteTextField = new JTextField();
        atualizarEnderecoClienteLabel = new JLabel();
        atualizarEnderecoClienteTextField = new JTextField();
        atualizarTelefoneClienteLabel = new JLabel();
        atualizarTelefoneClienteTextField = new JTextField();
        atualizarEmailClienteLabel = new JLabel();
        atualizarEmailClienteTextField = new JTextField();
        atualizarClienteButton = new JButton();
        clienteScrollPane = new JScrollPane();
        clienteTable = new JTable();
        animalPanel = new JPanel();
        animalTabbedPane = new JTabbedPane();
        cadastrarAnimalPanel = new JPanel();
        especieAnimalLabel = new JLabel();
        nomeAnimalLabel = new JLabel();
        tutorLabel = new JLabel();
        idadeAnimalLabel = new JLabel();
        sexoAnimalLabel = new JLabel();
        nomeAnimalTextField = new JTextField();
        cadastrarAnimalButton = new JButton();
        sexoAnimalComboBox = new JComboBox<>();
        idadeAnimalSpinner = new JSpinner();
        especieAnimalComboBox = new JComboBox<>();
        tutorComboBox = new JComboBox<>();
        cadastrarEspeciesPanel = new JPanel();
        nomeEspecieLabel = new JLabel();
        nomeEspecieTextField = new JTextField();
        cadastrarEspecieButton = new JButton();
        atualizarAnimalPanel = new JPanel();
        atualizarAnimalLabel = new JLabel();
        atualizarAnimalComboBox = new JComboBox<>();
        atualizarTutorLabel = new JLabel();
        atualizarTutorComboBox = new JComboBox<>();
        atualizarEspecieLabel = new JLabel();
        atualizarEspecieComboBox = new JComboBox<>();
        atualizarNomeAnimalLabel = new JLabel();
        atualizarNomeAnimalTextField = new JTextField();
        atualizarIdadeAnimalLabel = new JLabel();
        atualizarIdadeAnimalSpinner = new JSpinner();
        atualizarSexoAnimalLabel = new JLabel();
        atualizarSexoAnimalComboBox = new JComboBox<>();
        atualizarAnimalButton = new JButton();
        animalScrollPane = new JScrollPane();
        animalTable = new JTable();
        veterinarioPanel = new JPanel();
        veterinarioTabbedPane = new JTabbedPane();
        cadastrarVeterinario = new JPanel();
        nomeVeterinarioLabel = new JLabel();
        nomeVeterinarioTextField = new JTextField();
        cepVeterinarioLabel = new JLabel();
        cepVeterinarioTextField = new JTextField();
        enderecoVeterinarioLabel = new JLabel();
        enderecoVeterinarioTextField = new JTextField();
        telefoneVeterinarioLabel = new JLabel();
        telefoneVeterinarioTextField = new JTextField();
        emailVeterinarioTextField = new JTextField();
        emailVeterinarioLabel = new JLabel();
        cadastrarVeterinarioButton = new JButton();
        atualizarVeterinario = new JPanel();
        atualizarVeterinarioComboBox = new JComboBox<>();
        atualizarVeterinarioLabel = new JLabel();
        atualizarVeterinarioButton = new JButton();
        atualizarEmailVeterinarioTextField = new JTextField();
        atualizarEmailVeterinarioLabel = new JLabel();
        atualizarTelefoneVeterinarioTextField = new JTextField();
        atualizarTelefoneVeterinarioLabel = new JLabel();
        atualizarEnderecoVeterinarioTextField = new JTextField();
        atualizarEnderecoVeterinarioLabel = new JLabel();
        atualizarCepVeterinarioTextField = new JTextField();
        atualizarCepVeterinarioLabel = new JLabel();
        atualizarNomeVeterinarioTextField = new JTextField();
        atualizarNomeVeterinarioLabel = new JLabel();
        veterinarioScrollPane = new JScrollPane();
        veterinarioTable = new JTable();
        consultaPanel = new JPanel();
        consultaTabbedPane = new JTabbedPane();
        cadastrarConsulta = new JPanel();
        dataConsultaLabel = new JLabel();
        relatoConsultaLabel = new JLabel();
        veterinarioConsultaLabel = new JLabel();
        cadastrarConsultaButton = new JButton();
        tratamentoConsultaLabel = new JLabel();
        tratamentoConsultaComboBox = new JComboBox<>();
        veterinarioConsultaComboBox = new JComboBox<>();
        diaConsultaSpinner = new JSpinner();
        mesConsultaSpinner = new JSpinner();
        anoConsultaSpinner = new JSpinner();
        diaConsultaLabel = new JLabel();
        mesConsultaLabel = new JLabel();
        anoConsultaLabel = new JLabel();
        relatoCadastrarConsultaScrollPane = new JScrollPane();
        relatoConsultaTextArea = new JTextArea();
        consultaScrollPane = new JScrollPane();
        consultaTable = new JTable();
        examePanel = new JPanel();
        exameTabbedPane = new JTabbedPane();
        cadastrarExamePanel = new JPanel();
        descricaoExameLabel = new JLabel();
        consultaExameLabel = new JLabel();
        cadastrarExameButton = new JButton();
        consultaExameComboBox = new JComboBox<>();
        descricaoCadastrarExamePane = new JScrollPane();
        descricaoExameTextArea = new JTextArea();
        exameScrollPane = new JScrollPane();
        exameTable = new JTable();
        tratamentoPanel = new JPanel();
        tratamentoTabbedPane = new JTabbedPane();
        cadastrarTratamentoPanel = new JPanel();
        dataFimTratamentoLabel = new JLabel();
        animalTratamentoLabel = new JLabel();
        animalTratamentoComboBox = new JComboBox<>();
        dataInicioLabel = new JLabel();
        cadastrarTratamentoButton = new JButton();
        diaFimTratamentoSpinner = new JSpinner();
        diaFimTratamentoLabel = new JLabel();
        mesFimTratamentoLabel = new JLabel();
        mesFimTratamentoSpinner = new JSpinner();
        anoFimTratamentoLabel = new JLabel();
        anoFimTratamentoSpinner = new JSpinner();
        diaInicioTratamentoSpinner = new JSpinner();
        diaInicioTratamentoLabel = new JLabel();
        mesInicioTratamentoLabel = new JLabel();
        mesInicioTratamentoSpinner = new JSpinner();
        anoInicioTratamentoLabel = new JLabel();
        anoInicioTratamentoSpinner = new JSpinner();
        tratamentoScrollPane = new JScrollPane();
        tratamentoTable = new JTable();
        logoLabel = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        nomeClienteLabel.setText("Nome Cliente");

        nomeClienteTextField.setText("João da Silva");

        cepClienteLabel.setText("CEP Cliente");

        cepClienteTextField.setText("9999-999");

        enderecoClienteLabel.setText("Endereço Cliente");

        enderecoClienteTextField.setText("Rua tal");

        telefoneClienteLabel.setText("Telefone Cliente");

        telefoneClienteTextField.setText("(19) 99999-9999");

        emailClienteTextField.setText("email@exemplo.com");

        emailClienteLabel.setText("Email Cliente");

        cadastrarClienteButton.setText("Cadastrar");

        GroupLayout cadastrarClientePanelLayout = new GroupLayout(cadastrarClientePanel);
        cadastrarClientePanel.setLayout(cadastrarClientePanelLayout);
        cadastrarClientePanelLayout.setHorizontalGroup(
            cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(emailClienteTextField, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                        .addGroup(GroupLayout.Alignment.TRAILING, cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(telefoneClienteTextField, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                            .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(telefoneClienteLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 113, GroupLayout.PREFERRED_SIZE)))
                        .addGroup(GroupLayout.Alignment.TRAILING, cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(enderecoClienteTextField, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                                .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                                    .addGap(98, 98, 98)
                                    .addComponent(enderecoClienteLabel)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 113, GroupLayout.PREFERRED_SIZE)))
                            .addComponent(cepClienteTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomeClienteTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE))
                        .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                            .addGap(107, 107, 107)
                            .addGroup(cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(nomeClienteLabel)
                                .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addComponent(cepClienteLabel))
                                .addComponent(emailClienteLabel))
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 109, GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(cadastrarClienteButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 108, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        cadastrarClientePanelLayout.setVerticalGroup(
            cadastrarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarClientePanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(nomeClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cepClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cepClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enderecoClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enderecoClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telefoneClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telefoneClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadastrarClienteButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        clienteTabbedPane.addTab("Cadastrar Cliente", cadastrarClientePanel);

        atualizarClienteLabel.setText("Cliente");

        atualizarClienteComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        atualizarClienteComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atualizarClienteComboBoxActionPerformed(evt);
            }
        });

        atualizarNomeClienteLabel.setText("Nome Cliente");

        atualizarNomeClienteTextField.setText("João da Silva");

        atualizarCepClienteLabel.setText("CEP Cliente");

        atualizarCepClienteTextField.setText("9999-999");

        atualizarEnderecoClienteLabel.setText("Endereço Cliente");

        atualizarEnderecoClienteTextField.setText("Rua tal");

        atualizarTelefoneClienteLabel.setText("Telefone Cliente");

        atualizarTelefoneClienteTextField.setText("(19) 99999-9999");

        atualizarEmailClienteLabel.setText("Email Cliente");

        atualizarEmailClienteTextField.setText("email@exemplo.com");

        atualizarClienteButton.setText("Atualizar");

        GroupLayout atualizarClientePanelLayout = new GroupLayout(atualizarClientePanel);
        atualizarClientePanel.setLayout(atualizarClientePanelLayout);
        atualizarClientePanelLayout.setHorizontalGroup(
            atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(atualizarClienteLabel)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, atualizarClientePanelLayout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(atualizarClienteComboBox, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addGroup(atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(GroupLayout.Alignment.TRAILING, atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(atualizarEmailClienteTextField, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                            .addGroup(GroupLayout.Alignment.TRAILING, atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addComponent(atualizarTelefoneClienteTextField, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                                .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                                    .addGap(98, 98, 98)
                                    .addComponent(atualizarTelefoneClienteLabel)
                                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 113, GroupLayout.PREFERRED_SIZE)))
                            .addGroup(GroupLayout.Alignment.TRAILING, atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                .addGroup(atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(atualizarEnderecoClienteTextField, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                                    .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                                        .addGap(98, 98, 98)
                                        .addComponent(atualizarEnderecoClienteLabel)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 113, GroupLayout.PREFERRED_SIZE)))
                                .addComponent(atualizarCepClienteTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                                .addComponent(atualizarNomeClienteTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE))
                            .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addGroup(atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addComponent(atualizarNomeClienteLabel)
                                    .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(atualizarCepClienteLabel))
                                    .addComponent(atualizarEmailClienteLabel))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 109, GroupLayout.PREFERRED_SIZE)))
                        .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                            .addGap(93, 93, 93)
                            .addComponent(atualizarClienteButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 108, GroupLayout.PREFERRED_SIZE))))
                .addGap(52, 52, 52))
        );
        atualizarClientePanelLayout.setVerticalGroup(
            atualizarClientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(atualizarClientePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizarClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarClienteComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarNomeClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarNomeClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarCepClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarCepClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEnderecoClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEnderecoClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarTelefoneClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarTelefoneClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEmailClienteLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEmailClienteTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(atualizarClienteButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        clienteTabbedPane.addTab("Atualizar cliente", atualizarClientePanel);

        clienteTable.setModel(new ClienteTableModel());
        clienteScrollPane.setViewportView(clienteTable);

        GroupLayout clientePanelLayout = new GroupLayout(clientePanel);
        clientePanel.setLayout(clientePanelLayout);
        clientePanelLayout.setHorizontalGroup(
            clientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, clientePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clienteScrollPane, GroupLayout.DEFAULT_SIZE, 638, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clienteTabbedPane, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        clientePanelLayout.setVerticalGroup(
            clientePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(clienteTabbedPane)
            .addGroup(clientePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(clienteScrollPane, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Cliente", clientePanel);

        especieAnimalLabel.setText("Espécie");

        nomeAnimalLabel.setText("Nome Animal");

        tutorLabel.setText("Cliente tutor do Animal");

        idadeAnimalLabel.setText("Idade Animal");

        sexoAnimalLabel.setText("Sexo Animal");

        nomeAnimalTextField.setText("Rex");

        cadastrarAnimalButton.setText("Cadastrar");

        sexoAnimalComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "M", "F" }));
        sexoAnimalComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                sexoAnimalComboBoxActionPerformed(evt);
            }
        });

        especieAnimalComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        especieAnimalComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                especieAnimalComboBoxActionPerformed(evt);
            }
        });

        tutorComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        tutorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                tutorComboBoxActionPerformed(evt);
            }
        });

        GroupLayout cadastrarAnimalPanelLayout = new GroupLayout(cadastrarAnimalPanel);
        cadastrarAnimalPanel.setLayout(cadastrarAnimalPanelLayout);
        cadastrarAnimalPanelLayout.setHorizontalGroup(
            cadastrarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(cadastrarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(nomeAnimalTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addComponent(especieAnimalComboBox, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addComponent(tutorComboBox, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(cadastrarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(tutorLabel)
                            .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(especieAnimalLabel))))
                    .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(idadeAnimalLabel))
                    .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(nomeAnimalLabel))
                    .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(cadastrarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(idadeAnimalSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(cadastrarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(sexoAnimalLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(sexoAnimalComboBox, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE))))
                    .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(cadastrarAnimalButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        cadastrarAnimalPanelLayout.setVerticalGroup(
            cadastrarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarAnimalPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(tutorLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tutorComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(especieAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(especieAnimalComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeAnimalTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idadeAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idadeAnimalSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sexoAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sexoAnimalComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cadastrarAnimalButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );

        animalTabbedPane.addTab("Cadastrar Animal", cadastrarAnimalPanel);

        nomeEspecieLabel.setText("Nome Espécie");

        nomeEspecieTextField.setText("Poodle");

        cadastrarEspecieButton.setText("Cadastrar");

        GroupLayout cadastrarEspeciesPanelLayout = new GroupLayout(cadastrarEspeciesPanel);
        cadastrarEspeciesPanel.setLayout(cadastrarEspeciesPanelLayout);
        cadastrarEspeciesPanelLayout.setHorizontalGroup(
            cadastrarEspeciesPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarEspeciesPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(cadastrarEspeciesPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(nomeEspecieTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addGroup(cadastrarEspeciesPanelLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(nomeEspecieLabel))
                    .addGroup(cadastrarEspeciesPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(cadastrarEspecieButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        cadastrarEspeciesPanelLayout.setVerticalGroup(
            cadastrarEspeciesPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarEspeciesPanelLayout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(nomeEspecieLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeEspecieTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrarEspecieButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        animalTabbedPane.addTab("Cadastrar Especies", cadastrarEspeciesPanel);

        atualizarAnimalLabel.setText("Animal");

        atualizarAnimalComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        atualizarAnimalComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atualizarAnimalComboBoxActionPerformed(evt);
            }
        });

        atualizarTutorLabel.setText("Cliente tutor do Animal");

        atualizarTutorComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        atualizarTutorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atualizarTutorComboBoxActionPerformed(evt);
            }
        });

        atualizarEspecieLabel.setText("Espécie");

        atualizarEspecieComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        atualizarEspecieComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atualizarEspecieComboBoxActionPerformed(evt);
            }
        });

        atualizarNomeAnimalLabel.setText("Nome Animal");

        atualizarNomeAnimalTextField.setText("Rex");

        atualizarIdadeAnimalLabel.setText("Idade Animal");

        atualizarSexoAnimalLabel.setText("Sexo Animal");

        atualizarSexoAnimalComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "M", "F" }));

        atualizarAnimalButton.setText("Atualizar");

        GroupLayout atualizarAnimalPanelLayout = new GroupLayout(atualizarAnimalPanel);
        atualizarAnimalPanel.setLayout(atualizarAnimalPanelLayout);
        atualizarAnimalPanelLayout.setHorizontalGroup(
            atualizarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                .addGroup(atualizarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(atualizarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(atualizarTutorComboBox, 0, 300, Short.MAX_VALUE)
                            .addComponent(atualizarNomeAnimalTextField, GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(atualizarEspecieComboBox, 0, 300, Short.MAX_VALUE)
                            .addComponent(atualizarAnimalComboBox, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(atualizarAnimalLabel))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(atualizarTutorLabel))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(atualizarEspecieLabel))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(172, 172, 172)
                        .addComponent(atualizarNomeAnimalLabel))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(atualizarIdadeAnimalLabel))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addGroup(atualizarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(atualizarIdadeAnimalSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addGroup(atualizarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(atualizarSexoAnimalLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(atualizarSexoAnimalComboBox, GroupLayout.PREFERRED_SIZE, 66, GroupLayout.PREFERRED_SIZE))))
                    .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(atualizarAnimalButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        atualizarAnimalPanelLayout.setVerticalGroup(
            atualizarAnimalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(atualizarAnimalPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(atualizarAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarAnimalComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarTutorLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarTutorComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEspecieLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(atualizarEspecieComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarNomeAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarNomeAnimalTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarIdadeAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarIdadeAnimalSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarSexoAnimalLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarSexoAnimalComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarAnimalButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        animalTabbedPane.addTab("Atualizar Animal", atualizarAnimalPanel);

        animalTable.setModel(new AnimalTableModel());

        animalScrollPane.setViewportView(animalTable);

        GroupLayout animalPanelLayout = new GroupLayout(animalPanel);
        animalPanel.setLayout(animalPanelLayout);
        animalPanelLayout.setHorizontalGroup(
            animalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, animalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(animalScrollPane, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(animalTabbedPane, GroupLayout.PREFERRED_SIZE, 420, GroupLayout.PREFERRED_SIZE))
        );
        animalPanelLayout.setVerticalGroup(
            animalPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(animalTabbedPane, GroupLayout.PREFERRED_SIZE, 416, Short.MAX_VALUE)
            .addGroup(animalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(animalScrollPane, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Animal", animalPanel);

        nomeVeterinarioLabel.setText("Nome Veterinário");

        nomeVeterinarioTextField.setText("João da Silva");

        cepVeterinarioLabel.setText("CEP Veterinário");

        cepVeterinarioTextField.setText("9999-999");

        enderecoVeterinarioLabel.setText("Endereço Veterinário");

        enderecoVeterinarioTextField.setText("Rua tal");

        telefoneVeterinarioLabel.setText("Telefone Veterinário");

        telefoneVeterinarioTextField.setText("(19) 99999-9999");

        emailVeterinarioTextField.setText("email@exemplo.com");

        emailVeterinarioLabel.setText("Email Veterinário");

        cadastrarVeterinarioButton.setText("Cadastrar");

        GroupLayout cadastrarVeterinarioLayout = new GroupLayout(cadastrarVeterinario);
        cadastrarVeterinario.setLayout(cadastrarVeterinarioLayout);
        cadastrarVeterinarioLayout.setHorizontalGroup(
            cadastrarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(cadastrarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(emailVeterinarioLabel))
                    .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(cadastrarVeterinarioButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE))
                    .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addComponent(nomeVeterinarioLabel))
                    .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(cepVeterinarioLabel))
                    .addComponent(emailVeterinarioTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefoneVeterinarioTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addComponent(cepVeterinarioTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeVeterinarioTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addComponent(enderecoVeterinarioTextField, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(telefoneVeterinarioLabel))
                    .addGroup(cadastrarVeterinarioLayout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(enderecoVeterinarioLabel)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        cadastrarVeterinarioLayout.setVerticalGroup(
            cadastrarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarVeterinarioLayout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(nomeVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cepVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cepVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enderecoVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(enderecoVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telefoneVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(telefoneVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cadastrarVeterinarioButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        veterinarioTabbedPane.addTab("Cadastrar Veterinário", cadastrarVeterinario);

        atualizarVeterinarioComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        atualizarVeterinarioComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                atualizarVeterinarioComboBoxActionPerformed(evt);
            }
        });

        atualizarVeterinarioLabel.setText("Veterinário");

        atualizarVeterinarioButton.setText("Atualizar");

        atualizarEmailVeterinarioTextField.setText("email@exemplo.com");

        atualizarEmailVeterinarioLabel.setText("Email Veterinário");

        atualizarTelefoneVeterinarioTextField.setText("(19) 99999-9999");

        atualizarTelefoneVeterinarioLabel.setText("Telefone Veterinário");

        atualizarEnderecoVeterinarioTextField.setText("Rua tal");

        atualizarEnderecoVeterinarioLabel.setText("Endereço Veterinário");

        atualizarCepVeterinarioTextField.setText("9999-999");

        atualizarCepVeterinarioLabel.setText("CEP Veterinário");

        atualizarNomeVeterinarioTextField.setText("João da Silva");

        atualizarNomeVeterinarioLabel.setText("Nome Veterinário");

        GroupLayout atualizarVeterinarioLayout = new GroupLayout(atualizarVeterinario);
        atualizarVeterinario.setLayout(atualizarVeterinarioLayout);
        atualizarVeterinarioLayout.setHorizontalGroup(
            atualizarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(atualizarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(atualizarVeterinarioLabel))
                    .addGroup(atualizarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                        .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                            .addGap(106, 106, 106)
                            .addComponent(atualizarEmailVeterinarioLabel))
                        .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addComponent(atualizarVeterinarioButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE))
                        .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                            .addGap(103, 103, 103)
                            .addComponent(atualizarNomeVeterinarioLabel))
                        .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                            .addGap(109, 109, 109)
                            .addComponent(atualizarCepVeterinarioLabel))
                        .addComponent(atualizarEmailVeterinarioTextField)
                        .addComponent(atualizarTelefoneVeterinarioTextField)
                        .addComponent(atualizarCepVeterinarioTextField)
                        .addComponent(atualizarNomeVeterinarioTextField)
                        .addComponent(atualizarEnderecoVeterinarioTextField)
                        .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                            .addGap(99, 99, 99)
                            .addComponent(atualizarTelefoneVeterinarioLabel))
                        .addGroup(atualizarVeterinarioLayout.createSequentialGroup()
                            .addGap(96, 96, 96)
                            .addComponent(atualizarEnderecoVeterinarioLabel))
                        .addComponent(atualizarVeterinarioComboBox, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        atualizarVeterinarioLayout.setVerticalGroup(
            atualizarVeterinarioLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, atualizarVeterinarioLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(atualizarVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarVeterinarioComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(atualizarNomeVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarNomeVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarCepVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarCepVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEnderecoVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEnderecoVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarTelefoneVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarTelefoneVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEmailVeterinarioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(atualizarEmailVeterinarioTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(atualizarVeterinarioButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        veterinarioTabbedPane.addTab("Atualizar Veterinário", atualizarVeterinario);

        veterinarioTable.setModel(new VeterinarioTableModel());
        veterinarioScrollPane.setViewportView(veterinarioTable);

        GroupLayout veterinarioPanelLayout = new GroupLayout(veterinarioPanel);
        veterinarioPanel.setLayout(veterinarioPanelLayout);
        veterinarioPanelLayout.setHorizontalGroup(
            veterinarioPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, veterinarioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(veterinarioScrollPane, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(veterinarioTabbedPane, GroupLayout.PREFERRED_SIZE, 420, GroupLayout.PREFERRED_SIZE))
        );
        veterinarioPanelLayout.setVerticalGroup(
            veterinarioPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(veterinarioTabbedPane)
            .addGroup(veterinarioPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(veterinarioScrollPane, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Veterinário", veterinarioPanel);

        dataConsultaLabel.setText("Data");

        relatoConsultaLabel.setText("Relato consulta");

        veterinarioConsultaLabel.setText("Veterinário");

        cadastrarConsultaButton.setText("Cadastrar");

        tratamentoConsultaLabel.setText("Tratamento");

        tratamentoConsultaComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        tratamentoConsultaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                tratamentoConsultaComboBoxActionPerformed(evt);
            }
        });

        veterinarioConsultaComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        veterinarioConsultaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                veterinarioConsultaComboBoxActionPerformed(evt);
            }
        });

        diaConsultaLabel.setText("Dia");

        mesConsultaLabel.setText("Mês");

        anoConsultaLabel.setText("Ano");

        relatoConsultaTextArea.setColumns(20);
        relatoConsultaTextArea.setRows(5);
        relatoConsultaTextArea.setText("Relato da consulta");
        relatoCadastrarConsultaScrollPane.setViewportView(relatoConsultaTextArea);

        GroupLayout cadastrarConsultaLayout = new GroupLayout(cadastrarConsulta);
        cadastrarConsulta.setLayout(cadastrarConsultaLayout);
        cadastrarConsultaLayout.setHorizontalGroup(
            cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarConsultaLayout.createSequentialGroup()
                .addGroup(cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(cadastrarConsultaLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(diaConsultaLabel)
                        .addGap(56, 56, 56)
                        .addGroup(cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addComponent(mesConsultaLabel)
                            .addComponent(dataConsultaLabel))
                        .addGap(53, 53, 53)
                        .addComponent(anoConsultaLabel))
                    .addGroup(cadastrarConsultaLayout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(relatoConsultaLabel)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarConsultaLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(GroupLayout.Alignment.TRAILING, cadastrarConsultaLayout.createSequentialGroup()
                        .addComponent(diaConsultaSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mesConsultaSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(anoConsultaSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))
                    .addGroup(GroupLayout.Alignment.TRAILING, cadastrarConsultaLayout.createSequentialGroup()
                        .addGroup(cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                .addComponent(tratamentoConsultaComboBox, 0, 300, Short.MAX_VALUE)
                                .addComponent(veterinarioConsultaComboBox, 0, 300, Short.MAX_VALUE)
                                .addGroup(cadastrarConsultaLayout.createSequentialGroup()
                                    .addGap(119, 119, 119)
                                    .addComponent(veterinarioConsultaLabel))
                                .addGroup(cadastrarConsultaLayout.createSequentialGroup()
                                    .addGap(115, 115, 115)
                                    .addComponent(tratamentoConsultaLabel))
                                .addComponent(relatoCadastrarConsultaScrollPane))
                            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarConsultaLayout.createSequentialGroup()
                                .addComponent(cadastrarConsultaButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)))
                        .addGap(56, 56, 56))))
        );
        cadastrarConsultaLayout.setVerticalGroup(
            cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarConsultaLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(dataConsultaLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(diaConsultaLabel)
                    .addComponent(mesConsultaLabel)
                    .addComponent(anoConsultaLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastrarConsultaLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(diaConsultaSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesConsultaSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoConsultaSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(relatoConsultaLabel)
                .addGap(11, 11, 11)
                .addComponent(relatoCadastrarConsultaScrollPane, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tratamentoConsultaLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tratamentoConsultaComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(veterinarioConsultaLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(veterinarioConsultaComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrarConsultaButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        consultaTabbedPane.addTab("Cadastrar Consulta", cadastrarConsulta);

        consultaTable.setModel(new ConsultaTableModel());
        consultaScrollPane.setViewportView(consultaTable);

        GroupLayout consultaPanelLayout = new GroupLayout(consultaPanel);
        consultaPanel.setLayout(consultaPanelLayout);
        consultaPanelLayout.setHorizontalGroup(
            consultaPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, consultaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(consultaScrollPane, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(consultaTabbedPane, GroupLayout.PREFERRED_SIZE, 420, GroupLayout.PREFERRED_SIZE))
        );
        consultaPanelLayout.setVerticalGroup(
            consultaPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(consultaTabbedPane)
            .addGroup(consultaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(consultaScrollPane, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Consulta", consultaPanel);

        descricaoExameLabel.setText("Descrição");

        consultaExameLabel.setText("Consulta");

        cadastrarExameButton.setText("Cadastrar");

        consultaExameComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        consultaExameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                consultaExameComboBoxActionPerformed(evt);
            }
        });

        descricaoExameTextArea.setColumns(20);
        descricaoExameTextArea.setRows(5);
        descricaoExameTextArea.setText("Descrição do exame");
        descricaoCadastrarExamePane.setViewportView(descricaoExameTextArea);

        GroupLayout cadastrarExamePanelLayout = new GroupLayout(cadastrarExamePanel);
        cadastrarExamePanel.setLayout(cadastrarExamePanelLayout);
        cadastrarExamePanelLayout.setHorizontalGroup(
            cadastrarExamePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarExamePanelLayout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addGroup(cadastrarExamePanelLayout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                    .addComponent(descricaoCadastrarExamePane, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                    .addGroup(cadastrarExamePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(cadastrarExamePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(consultaExameComboBox, GroupLayout.Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE)
                            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarExamePanelLayout.createSequentialGroup()
                                .addComponent(cadastrarExameButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                                .addGap(103, 103, 103)))
                        .addGroup(cadastrarExamePanelLayout.createSequentialGroup()
                            .addGap(122, 122, 122)
                            .addComponent(consultaExameLabel))
                        .addGroup(cadastrarExamePanelLayout.createSequentialGroup()
                            .addGap(118, 118, 118)
                            .addComponent(descricaoExameLabel))))
                .addGap(58, 58, 58))
        );
        cadastrarExamePanelLayout.setVerticalGroup(
            cadastrarExamePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarExamePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(descricaoExameLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(descricaoCadastrarExamePane, GroupLayout.PREFERRED_SIZE, 171, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(consultaExameLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(consultaExameComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrarExameButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        exameTabbedPane.addTab("Cadastrar Exame", cadastrarExamePanel);

        exameTable.setModel(new ExameTableModel());
        exameScrollPane.setViewportView(exameTable);

        GroupLayout examePanelLayout = new GroupLayout(examePanel);
        examePanel.setLayout(examePanelLayout);
        examePanelLayout.setHorizontalGroup(
            examePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, examePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exameScrollPane, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exameTabbedPane, GroupLayout.PREFERRED_SIZE, 420, GroupLayout.PREFERRED_SIZE))
        );
        examePanelLayout.setVerticalGroup(
            examePanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(exameTabbedPane)
            .addGroup(examePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(exameScrollPane, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Exame", examePanel);

        dataFimTratamentoLabel.setText("Data fim");

        animalTratamentoLabel.setText("Animal");

        animalTratamentoComboBox.setModel(new DefaultComboBoxModel<>(new String[] { "João da Silva", "Item 2", "Item 3", "Item 4" }));
        animalTratamentoComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                animalTratamentoComboBoxActionPerformed(evt);
            }
        });

        dataInicioLabel.setText("Data Início");

        cadastrarTratamentoButton.setText("Cadastrar");

        diaFimTratamentoLabel.setText("Dia");

        mesFimTratamentoLabel.setText("Mês");

        anoFimTratamentoLabel.setText("Ano");

        diaInicioTratamentoLabel.setText("Dia");

        mesInicioTratamentoLabel.setText("Mês");

        anoInicioTratamentoLabel.setText("Ano");

        GroupLayout cadastrarTratamentoPanelLayout = new GroupLayout(cadastrarTratamentoPanel);
        cadastrarTratamentoPanel.setLayout(cadastrarTratamentoPanelLayout);
        cadastrarTratamentoPanelLayout.setHorizontalGroup(
            cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, cadastrarTratamentoPanelLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                        .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(diaFimTratamentoLabel)
                                .addGap(56, 56, 56)
                                .addComponent(mesFimTratamentoLabel)
                                .addGap(53, 53, 53)
                                .addComponent(anoFimTratamentoLabel))
                            .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                    .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addComponent(diaInicioTratamentoLabel)
                                            .addGap(56, 56, 56)
                                            .addComponent(mesInicioTratamentoLabel)
                                            .addGap(53, 53, 53)
                                            .addComponent(anoInicioTratamentoLabel)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 24, GroupLayout.PREFERRED_SIZE))
                                        .addGroup(GroupLayout.Alignment.TRAILING, cadastrarTratamentoPanelLayout.createSequentialGroup()
                                            .addComponent(diaInicioTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                .addComponent(dataInicioLabel)
                                                .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                                                    .addComponent(mesInicioTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addComponent(anoInicioTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(dataFimTratamentoLabel))
                                    .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                                        .addComponent(diaFimTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(mesFimTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(anoFimTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 49, GroupLayout.PREFERRED_SIZE))
                    .addGroup(GroupLayout.Alignment.TRAILING, cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                            .addGap(127, 127, 127)
                            .addComponent(animalTratamentoLabel))
                        .addComponent(animalTratamentoComboBox, GroupLayout.PREFERRED_SIZE, 300, GroupLayout.PREFERRED_SIZE))
                    .addGroup(GroupLayout.Alignment.TRAILING, cadastrarTratamentoPanelLayout.createSequentialGroup()
                        .addComponent(cadastrarTratamentoButton, GroupLayout.PREFERRED_SIZE, 99, GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104)))
                .addGap(55, 55, 55))
        );
        cadastrarTratamentoPanelLayout.setVerticalGroup(
            cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(cadastrarTratamentoPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(dataInicioLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(diaInicioTratamentoLabel)
                    .addComponent(mesInicioTratamentoLabel)
                    .addComponent(anoInicioTratamentoLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(diaInicioTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesInicioTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoInicioTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataFimTratamentoLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(diaFimTratamentoLabel)
                    .addComponent(mesFimTratamentoLabel)
                    .addComponent(anoFimTratamentoLabel))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cadastrarTratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(diaFimTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(mesFimTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoFimTratamentoSpinner, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(animalTratamentoLabel)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(animalTratamentoComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrarTratamentoButton, GroupLayout.PREFERRED_SIZE, 44, GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        tratamentoTabbedPane.addTab("Cadastrar Tratamento", cadastrarTratamentoPanel);

        tratamentoTable.setModel(new TratamentoTableModel());
        tratamentoScrollPane.setViewportView(tratamentoTable);

        GroupLayout tratamentoPanelLayout = new GroupLayout(tratamentoPanel);
        tratamentoPanel.setLayout(tratamentoPanelLayout);
        tratamentoPanelLayout.setHorizontalGroup(
            tratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, tratamentoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tratamentoScrollPane, GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tratamentoTabbedPane, GroupLayout.PREFERRED_SIZE, 420, GroupLayout.PREFERRED_SIZE))
        );
        tratamentoPanelLayout.setVerticalGroup(
            tratamentoPanelLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(tratamentoTabbedPane)
            .addGroup(tratamentoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tratamentoScrollPane, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Tratamento", tratamentoPanel);

        logoLabel.setText("LOGO DA CLÍNICA VETERINÁRIA");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoLabel)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(logoLabel)
                .addGap(18, 18, 18)
                .addComponent(mainTabbedPane, GroupLayout.PREFERRED_SIZE, 439, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void especieAnimalComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_especieAnimalComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_especieAnimalComboBoxActionPerformed

    private void tratamentoConsultaComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_tratamentoConsultaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tratamentoConsultaComboBoxActionPerformed

    private void veterinarioConsultaComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_veterinarioConsultaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_veterinarioConsultaComboBoxActionPerformed

    private void tutorComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_tutorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tutorComboBoxActionPerformed

    private void consultaExameComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_consultaExameComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_consultaExameComboBoxActionPerformed

    private void animalTratamentoComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_animalTratamentoComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_animalTratamentoComboBoxActionPerformed

    private void atualizarClienteComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atualizarClienteComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarClienteComboBoxActionPerformed

    private void atualizarAnimalComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atualizarAnimalComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarAnimalComboBoxActionPerformed

    private void atualizarTutorComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atualizarTutorComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarTutorComboBoxActionPerformed

    private void atualizarEspecieComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atualizarEspecieComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarEspecieComboBoxActionPerformed

    private void atualizarVeterinarioComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_atualizarVeterinarioComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_atualizarVeterinarioComboBoxActionPerformed

    private void sexoAnimalComboBoxActionPerformed(ActionEvent evt) {//GEN-FIRST:event_sexoAnimalComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sexoAnimalComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Frame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel animalPanel;
    private JScrollPane animalScrollPane;
    private JTabbedPane animalTabbedPane;
    private JTable animalTable;
    private JComboBox<String> animalTratamentoComboBox;
    private JLabel animalTratamentoLabel;
    private JLabel anoConsultaLabel;
    private JSpinner anoConsultaSpinner;
    private JLabel anoFimTratamentoLabel;
    private JSpinner anoFimTratamentoSpinner;
    private JLabel anoInicioTratamentoLabel;
    private JSpinner anoInicioTratamentoSpinner;
    private JButton atualizarAnimalButton;
    private JComboBox<String> atualizarAnimalComboBox;
    private JLabel atualizarAnimalLabel;
    private JPanel atualizarAnimalPanel;
    private JLabel atualizarCepClienteLabel;
    private JTextField atualizarCepClienteTextField;
    private JLabel atualizarCepVeterinarioLabel;
    private JTextField atualizarCepVeterinarioTextField;
    private JButton atualizarClienteButton;
    private JComboBox<String> atualizarClienteComboBox;
    private JLabel atualizarClienteLabel;
    private JPanel atualizarClientePanel;
    private JLabel atualizarEmailClienteLabel;
    private JTextField atualizarEmailClienteTextField;
    private JLabel atualizarEmailVeterinarioLabel;
    private JTextField atualizarEmailVeterinarioTextField;
    private JLabel atualizarEnderecoClienteLabel;
    private JTextField atualizarEnderecoClienteTextField;
    private JLabel atualizarEnderecoVeterinarioLabel;
    private JTextField atualizarEnderecoVeterinarioTextField;
    private JComboBox<String> atualizarEspecieComboBox;
    private JLabel atualizarEspecieLabel;
    private JLabel atualizarIdadeAnimalLabel;
    private JSpinner atualizarIdadeAnimalSpinner;
    private JLabel atualizarNomeAnimalLabel;
    private JTextField atualizarNomeAnimalTextField;
    private JLabel atualizarNomeClienteLabel;
    private JTextField atualizarNomeClienteTextField;
    private JLabel atualizarNomeVeterinarioLabel;
    private JTextField atualizarNomeVeterinarioTextField;
    private JComboBox<String> atualizarSexoAnimalComboBox;
    private JLabel atualizarSexoAnimalLabel;
    private JLabel atualizarTelefoneClienteLabel;
    private JTextField atualizarTelefoneClienteTextField;
    private JLabel atualizarTelefoneVeterinarioLabel;
    private JTextField atualizarTelefoneVeterinarioTextField;
    private JComboBox<String> atualizarTutorComboBox;
    private JLabel atualizarTutorLabel;
    private JPanel atualizarVeterinario;
    private JButton atualizarVeterinarioButton;
    private JComboBox<String> atualizarVeterinarioComboBox;
    private JLabel atualizarVeterinarioLabel;
    private JButton cadastrarAnimalButton;
    private JPanel cadastrarAnimalPanel;
    private JButton cadastrarClienteButton;
    private JPanel cadastrarClientePanel;
    private JPanel cadastrarConsulta;
    private JButton cadastrarConsultaButton;
    private JButton cadastrarEspecieButton;
    private JPanel cadastrarEspeciesPanel;
    private JButton cadastrarExameButton;
    private JPanel cadastrarExamePanel;
    private JButton cadastrarTratamentoButton;
    private JPanel cadastrarTratamentoPanel;
    private JPanel cadastrarVeterinario;
    private JButton cadastrarVeterinarioButton;
    private JLabel cepClienteLabel;
    private JTextField cepClienteTextField;
    private JLabel cepVeterinarioLabel;
    private JTextField cepVeterinarioTextField;
    private JPanel clientePanel;
    private JScrollPane clienteScrollPane;
    private JTabbedPane clienteTabbedPane;
    private JTable clienteTable;
    private JComboBox<String> consultaExameComboBox;
    private JLabel consultaExameLabel;
    private JPanel consultaPanel;
    private JScrollPane consultaScrollPane;
    private JTabbedPane consultaTabbedPane;
    private JTable consultaTable;
    private JLabel dataConsultaLabel;
    private JLabel dataFimTratamentoLabel;
    private JLabel dataInicioLabel;
    private JScrollPane descricaoCadastrarExamePane;
    private JLabel descricaoExameLabel;
    private JTextArea descricaoExameTextArea;
    private JLabel diaConsultaLabel;
    private JSpinner diaConsultaSpinner;
    private JLabel diaFimTratamentoLabel;
    private JSpinner diaFimTratamentoSpinner;
    private JLabel diaInicioTratamentoLabel;
    private JSpinner diaInicioTratamentoSpinner;
    private JLabel emailClienteLabel;
    private JTextField emailClienteTextField;
    private JLabel emailVeterinarioLabel;
    private JTextField emailVeterinarioTextField;
    private JLabel enderecoClienteLabel;
    private JTextField enderecoClienteTextField;
    private JLabel enderecoVeterinarioLabel;
    private JTextField enderecoVeterinarioTextField;
    private JComboBox<String> especieAnimalComboBox;
    private JLabel especieAnimalLabel;
    private JPanel examePanel;
    private JScrollPane exameScrollPane;
    private JTabbedPane exameTabbedPane;
    private JTable exameTable;
    private JLabel idadeAnimalLabel;
    private JSpinner idadeAnimalSpinner;
    private JLabel logoLabel;
    private JTabbedPane mainTabbedPane;
    private JLabel mesConsultaLabel;
    private JSpinner mesConsultaSpinner;
    private JLabel mesFimTratamentoLabel;
    private JSpinner mesFimTratamentoSpinner;
    private JLabel mesInicioTratamentoLabel;
    private JSpinner mesInicioTratamentoSpinner;
    private JLabel nomeAnimalLabel;
    private JTextField nomeAnimalTextField;
    private JLabel nomeClienteLabel;
    private JTextField nomeClienteTextField;
    private JLabel nomeEspecieLabel;
    private JTextField nomeEspecieTextField;
    private JLabel nomeVeterinarioLabel;
    private JTextField nomeVeterinarioTextField;
    private JScrollPane relatoCadastrarConsultaScrollPane;
    private JLabel relatoConsultaLabel;
    private JTextArea relatoConsultaTextArea;
    private JComboBox<String> sexoAnimalComboBox;
    private JLabel sexoAnimalLabel;
    private JLabel telefoneClienteLabel;
    private JTextField telefoneClienteTextField;
    private JLabel telefoneVeterinarioLabel;
    private JTextField telefoneVeterinarioTextField;
    private JComboBox<String> tratamentoConsultaComboBox;
    private JLabel tratamentoConsultaLabel;
    private JPanel tratamentoPanel;
    private JScrollPane tratamentoScrollPane;
    private JTabbedPane tratamentoTabbedPane;
    private JTable tratamentoTable;
    private JComboBox<String> tutorComboBox;
    private JLabel tutorLabel;
    private JComboBox<String> veterinarioConsultaComboBox;
    private JLabel veterinarioConsultaLabel;
    private JPanel veterinarioPanel;
    private JScrollPane veterinarioScrollPane;
    private JTabbedPane veterinarioTabbedPane;
    private JTable veterinarioTable;
    // End of variables declaration//GEN-END:variables
}
